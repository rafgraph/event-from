{"version":3,"sources":["stitches.config.ts","ui/Button.tsx","ui/DarkModeButton.tsx","ui/GitHubIconLink.tsx","ui/Link.tsx","ui/OptionCheckboxAndLabel.tsx","components/useEventLog.ts","components/EventLog.tsx","components/Demos.tsx","App.tsx","index.tsx"],"names":["stitchesConfig","createCss","theme","colors","pageBackground","backgroundContrast","highContrast","lowContrast","red","orange","yellow","green","blueGreen","blue","purple","fonts","mono","styled","global","createGlobalCss","darkThemeClass","globalCss","all","margin","border","padding","boxSizing","font","fontWeight","textAlign","lineHeight","wordBreak","color","background","outline","body","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","fontSize","WebkitTextSizeAdjust","textSizeAdjust","code","height","minHeight","backgroundColor","Button","Interactive","WebkitTapHighlightColor","borderColor","variants","focus","outlineOffset","boxShadow","defaultVariants","DarkModeButton","css","props","storageProvider","localStorage","darkMode","useDarkMode","undefined","classNameDark","React","value","document","documentElement","style","colorScheme","onClick","toggle","width","borderRadius","title","aria-label","GitHubIconLink","newWindow","as","A","target","rel","display","transform","StyledLink","textDecorationLine","textDecorationStyle","textDecorationColor","textDecorationThickness","Link","OptionLabel","createInteractive","Label","cursor","opacity","OptionCheckbox","Checkbox","verticalAlign","marginTop","marginRight","appearance","alignItems","OptionCheckboxAndLabel","label","checked","disabled","setChecked","disableCheckbox","setDisableCheckbox","onCheckedChange","event","CheckIcon","listOfEventListenerTypes","propName","category","calculateTimeSincePreviousEvent","eventLog","nowTime","eventType","i","length","type","eventTime","lastEventTime","time","useEventLog","setMoveListeners","preventDefaultOnAll","contextMenuPreventDefault","consoleLogEvents","useContext","OptionsContext","updateEventLog","useState","eventListeners","useMemo","reduce","eventListenersReduceObj","listenerType","test","toLowerCase","eventFromResult","eventFrom","Date","now","preventDefault","console","log","prevState","newState","recentEventOfSameTypeIdx","recentTimeCutoff","Math","max","e","findIndexOfRecentEventOfSameType","includes","recentEvent","newCount","count","timeSincePreviousEvent","timeSincePreviousPointerdown","xCoordinate","round","clientX","yCoordinate","clientY","push","EventLogContainer","overflowY","EventLogLine","spaceAbove","true","InfoType","click","pointer","mouse","touch","key","cancel","determineInfoType","EventLogUI","showTimeSincePreviousEvent","showTimeSincePreviousPointerdown","showEventCoordinates","showPointerEvents","showMouseEvents","showTouchEvents","eventLogEl","useRef","useEffect","current","scrollTop","scrollHeight","eventsToExclude","ref","map","idx","DemoContainer","paddingBottom","borderBottom","DemoButtonSharedStyle","DemoButtonInteractive","DemoButtonRegular","DemoLinkContainer","DemoLinkSharedStyle","DemoLinkInteractive","DemoLinkRegular","FormHeader","overflow","pointerEvents","DemoTextInputSharedStyle","DemoTextInputInteractive","Input","DemoTextInputRegular","DemoSubmitButtonSharedStyle","DemoSubmitButtonInteractive","DemoSubmitButtonRegular","ButtonDemo","useReactInteractive","riUseExtendedTouchActive","touchActionNone","webkitTapHighlightColorTransparent","webkitTouchCalloutNone","touchAction","WebkitTouchCallout","id","useExtendedTouchActive","LinkDemo","draggableFalse","href","draggable","FormDemo","textInput","submitButton","onSubmit","placeholder","AppContainer","maxWidth","HeaderContainer","justifyContent","marginBottom","H1","HeaderIconContainer","gap","InfoContainer","DemoOptionsContainer","DemoOptionsButton","OptionsContainer","OptionSectionHeading","createContext","userSelectNone","App","showDemoOptions","updateShowDemoOptions","updateUseReactInteractive","updateSetMoveListeners","updatePreventDefaultOnAll","updateTouchActionNone","updateWebkitTapHighlightColorTransparent","updateInteractiveUseExtendedTouchActive","updateUserSelectNone","updateContextMenuPreventDefault","updateWebkitTouchCalloutNone","updateDraggableFalse","updateShowTimeSincePreviousEvent","updateShowTimeSincePreviousPointerdown","updateShowEventCoordinates","updateShowPointerEvents","updateShowMouseEvents","updateShowTouchEvents","updateConsoleLogEvents","demoOptions","userSelect","webkitUserSelect","onStateChange","state","hover","active","window","setTimeout","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fea94f65.chunk.js","sourcesContent":["import { createCss, StitchesCss } from '@stitches/react';\n\nconst stitchesConfig = createCss({\n  theme: {\n    colors: {\n      pageBackground: 'rgb(240,240,240)',\n      backgroundContrast: 'rgb(216,216,216)',\n      highContrast: 'rgb(0,0,0)',\n      lowContrast: 'rgb(128,128,128)',\n      red: 'hsl(0,100%,50%)',\n      orange: 'hsl(30,100%,50%)',\n      yellow: 'hsl(51,100%,40%)',\n      green: 'hsl(120,100%,33%)', // same as rgb(0,168,0)\n      blueGreen: 'hsl(180,100%,35%)',\n      blue: 'hsl(240,100%,50%)',\n      purple: 'hsl(270,100%,60%)',\n    },\n    fonts: {\n      mono: 'monospace',\n    },\n  },\n});\n\nexport type CSS = StitchesCss<typeof stitchesConfig>;\n\nexport const { styled, theme, global: createGlobalCss } = stitchesConfig;\n\nexport const darkThemeClass = theme({\n  colors: {\n    pageBackground: 'rgb(32,32,32)',\n    backgroundContrast: 'rgb(64,64,64)',\n    highContrast: 'rgb(192,192,192)',\n    lowContrast: 'rgb(136,136,136)',\n    red: 'hsl(0,100%,50%)',\n    orange: 'hsl(30,90%,50%)',\n    yellow: 'hsl(60,88%,50%)',\n    green: 'hsl(120,85%,42%)',\n    blueGreen: 'hsl(180,100%,50%)',\n    blue: 'hsl(210,100%,60%)',\n    purple: 'hsl(270,85%,60%)',\n  },\n});\n\nexport const globalCss = createGlobalCss({\n  // unset all styles on interactive elements\n  'button, input, select, textarea, a, area': {\n    all: 'unset',\n  },\n  // normalize behavior on all elements\n  '*, *::before, *::after, button, input, select, textarea, a, area': {\n    margin: 0,\n    border: 0,\n    padding: 0,\n    boxSizing: 'inherit',\n    font: 'inherit',\n    fontWeight: 'inherit',\n    textAlign: 'inherit',\n    lineHeight: 'inherit',\n    wordBreak: 'inherit',\n    color: 'inherit',\n    background: 'transparent',\n    outline: 'none',\n    // don't set WebkitTapHighlightColor globally b/c\n    // can't revert it to browser default in demos\n    // WebkitTapHighlightColor: 'transparent',\n  },\n  // set base styles for the app\n  body: {\n    color: '$highContrast',\n    fontFamily: 'system-ui, Helvetica Neue, sans-serif',\n    // use word-break instead of \"overflow-wrap: anywhere\" because of Safari support\n    wordBreak: 'break-word',\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    WebkitTextSizeAdjust: 'none', // required because textSizeAdjust is not getting prefixed in Stitches v0.1.9\n    textSizeAdjust: 'none',\n  },\n  code: {\n    fontFamily: '$mono',\n  },\n  // pass down height: 100% to the #root div\n  'body, html': {\n    height: '100%',\n  },\n  '#root': {\n    minHeight: '100%',\n    backgroundColor: '$pageBackground',\n  },\n});\n","import { Interactive } from 'react-interactive';\nimport { styled } from '../stitches.config';\n\nexport const Button = styled(Interactive.Button, {\n  color: '$highContrast',\n  WebkitTapHighlightColor: 'transparent', // required here because can't set globally in Event From demo\n  '&.hover, &.active': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  variants: {\n    focus: {\n      outline: {\n        '&.focusFromKey': {\n          outline: '2px solid $colors$purple',\n          outlineOffset: '2px',\n        },\n      },\n      boxShadow: {\n        '&.focusFromKey': {\n          boxShadow: '0 0 0 2px $colors$purple',\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    focus: 'outline',\n  },\n});\n","import * as React from 'react';\nimport { SunIcon } from '@radix-ui/react-icons';\nimport useDarkMode from 'use-dark-mode';\nimport { Button } from './Button';\nimport { darkThemeClass } from '../stitches.config';\n\ninterface DarkModeButtonProps {\n  css?: React.ComponentProps<typeof Button>['css'];\n}\n\nexport const DarkModeButton: React.VFC<DarkModeButtonProps> = ({\n  css,\n  ...props\n}) => {\n  // put a try catch around localStorage so this app will work in codesandbox\n  // when the user blocks third party cookies in chrome,\n  // which results in a security error when useDarkMode tries to access localStorage\n  // see https://github.com/codesandbox/codesandbox-client/issues/5397\n  let storageProvider: any = null;\n  try {\n    storageProvider = localStorage;\n  } catch {}\n  const darkMode = useDarkMode(undefined, {\n    classNameDark: darkThemeClass,\n    storageProvider,\n  });\n\n  // add color-scheme style to <html> element\n  // so document scroll bars will have native dark mode styling\n  React.useEffect(() => {\n    if (darkMode.value === true) {\n      // @ts-ignore because colorScheme type not added yet\n      document.documentElement.style.colorScheme = 'dark';\n    } else {\n      // @ts-ignore\n      document.documentElement.style.colorScheme = 'light';\n    }\n  }, [darkMode.value]);\n\n  return (\n    <Button\n      {...props}\n      onClick={darkMode.toggle}\n      focus=\"boxShadow\"\n      css={{\n        width: '36px',\n        height: '36px',\n        padding: '3px',\n        margin: '-3px',\n        borderRadius: '50%',\n        // cast as any b/c of Stitches bug: https://github.com/modulz/stitches/issues/407\n        ...(css as any),\n      }}\n      title=\"Toggle dark mode\"\n      aria-label=\"Toggle dark mode\"\n    >\n      <SunIcon width=\"30\" height=\"30\" />\n    </Button>\n  );\n};\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { GitHubLogoIcon } from '@radix-ui/react-icons';\nimport { Button } from './Button';\n\ninterface GitHubIconLinkProps {\n  href?: string;\n  title?: string;\n  newWindow?: boolean;\n  css?: React.ComponentProps<typeof Button>['css'];\n}\n\nexport const GitHubIconLink: React.VFC<GitHubIconLinkProps> = ({\n  newWindow = true,\n  css,\n  title,\n  ...props\n}) => (\n  <Button\n    {...props}\n    as={Interactive.A}\n    title={title}\n    aria-label={title}\n    target={newWindow ? '_blank' : undefined}\n    rel={newWindow ? 'noopener noreferrer' : undefined}\n    focus=\"boxShadow\"\n    css={{\n      display: 'inline-block',\n      width: '36px',\n      height: '36px',\n      padding: '3px',\n      margin: '-3px',\n      borderRadius: '50%',\n      // cast as any b/c of Stitches bug: https://github.com/modulz/stitches/issues/407\n      ...(css as any),\n    }}\n  >\n    <GitHubLogoIcon\n      width=\"30\"\n      height=\"30\"\n      // scale up the svg icon because it doesn't fill the view box\n      // see: https://github.com/radix-ui/icons/issues/73\n      style={{ transform: 'scale(1.1278)' }}\n    />\n  </Button>\n);\n","import * as React from 'react';\nimport { Interactive } from 'react-interactive';\nimport { styled } from '../stitches.config';\n\nconst StyledLink = styled(Interactive.A, {\n  color: '$highContrast',\n  WebkitTapHighlightColor: 'transparent', // required here because can't set globally in Event From demo\n\n  // can't use shorthand for textDecoration because of bug in Safari v14\n  // textDecoration: 'underline $colors$green dotted from-font',\n  textDecorationLine: 'underline',\n  textDecorationStyle: 'dotted',\n  textDecorationColor: '$green',\n  textDecorationThickness: 'from-font',\n\n  padding: '0 1px',\n  margin: '0 -1px',\n\n  '&.hover': {\n    textDecorationColor: '$green',\n    textDecorationStyle: 'solid',\n  },\n  '&.active': {\n    textDecorationColor: '$green',\n    textDecorationStyle: 'solid',\n    color: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$purple',\n    outlineOffset: '2px',\n  },\n});\n\ninterface LinkProps extends React.ComponentPropsWithoutRef<typeof StyledLink> {\n  newWindow?: boolean;\n}\n\nexport const Link: React.VFC<LinkProps> = ({ newWindow = true, ...props }) => (\n  <StyledLink\n    {...props}\n    target={newWindow ? '_blank' : undefined}\n    rel={newWindow ? 'noopener noreferrer' : undefined}\n  />\n);\n","import * as React from 'react';\nimport { createInteractive } from 'react-interactive';\nimport * as Checkbox from '@radix-ui/react-checkbox';\nimport * as Label from '@radix-ui/react-label';\nimport { CheckIcon } from '@radix-ui/react-icons';\nimport { styled } from '../stitches.config';\n\nconst OptionLabel = styled(createInteractive(Label.Root), {\n  display: 'block',\n  margin: '10px 0',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '& code': {\n    backgroundColor: '$backgroundContrast',\n    padding: '0 5px',\n    borderRadius: '5px',\n  },\n\n  // style checkbox (which renders a button) when label is hovered/active\n  '&.hover>button:not(.disabled), &.active>button:not(.disabled)': {\n    borderColor: '$green',\n    boxShadow: '0 0 0 1px $colors$green',\n  },\n  '&.active>button:not(.disabled)': {\n    color: '$green',\n  },\n  '&.disabled': {\n    opacity: 0.5,\n    cursor: 'unset',\n  },\n});\n\nconst OptionCheckbox = styled(createInteractive(Checkbox.Root), {\n  verticalAlign: 'top',\n  marginTop: '1px',\n  marginRight: '4px',\n  appearance: 'none',\n  backgroundColor: 'transparent',\n  border: '1px solid $highContrast',\n  width: '17px',\n  height: '17px',\n  borderRadius: '2px',\n\n  // to center the check icon vertically because line-height of label\n  // is greater than checkbox height because of code blocks/monospace font\n  display: 'inline-flex',\n  alignItems: 'center',\n\n  // hover and active are styled in label so styles are applied when label is hovered/active\n  // '&.hover, &.active': {...},\n  '&.focusFromKey': {\n    borderColor: '$purple',\n    boxShadow: '0 0 0 1px $colors$purple',\n  },\n  '&.keyActive': {\n    color: '$green',\n    borderColor: '$green',\n    boxShadow: '0 0 0 1px $colors$green',\n  },\n});\n\ninterface OptionCheckboxAndLabelProps {\n  label:\n    | React.ReactNode\n    | ((arg: {\n        setDisableCheckbox: React.Dispatch<React.SetStateAction<boolean>>;\n      }) => React.ReactNode);\n  checked: boolean;\n  disabled?: boolean;\n  setChecked: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const OptionCheckboxAndLabel: React.VFC<OptionCheckboxAndLabelProps> = ({\n  label,\n  checked,\n  disabled,\n  setChecked,\n}) => {\n  const [disableCheckbox, setDisableCheckbox] = React.useState(false);\n\n  return (\n    <OptionLabel disabled={disabled}>\n      <OptionCheckbox\n        disabled={disabled || disableCheckbox}\n        checked={checked}\n        onCheckedChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          setChecked(event.target.checked)\n        }\n      >\n        <Checkbox.Indicator as={CheckIcon} width=\"15\" height=\"15\" />\n      </OptionCheckbox>\n      {typeof label === 'function' ? label({ setDisableCheckbox }) : label}\n    </OptionLabel>\n  );\n};\n","import React, { useState, useMemo, useContext } from 'react';\nimport { eventFrom, EventFromInput } from 'event-from';\nimport { OptionsContext } from '../App';\n\nexport type EventCategory =\n  | 'click'\n  | 'mouse'\n  | 'pointer'\n  | 'touch'\n  | 'key'\n  | 'focus'\n  | 'drag'\n  | 'wheel'\n  | 'scroll'\n  | 'select'\n  | 'contextMenu';\n\nconst listOfEventListenerTypes: {\n  propName: string;\n  category: EventCategory;\n}[] = [\n  // click events\n  { propName: 'onClick', category: 'click' },\n  { propName: 'onDoubleClick', category: 'click' },\n  // pointer events\n  { propName: 'onPointerEnter', category: 'pointer' },\n  { propName: 'onPointerLeave', category: 'pointer' },\n  { propName: 'onPointerOver', category: 'pointer' },\n  { propName: 'onPointerOut', category: 'pointer' },\n  { propName: 'onPointerDown', category: 'pointer' },\n  { propName: 'onPointerUp', category: 'pointer' },\n  { propName: 'onPointerMove', category: 'pointer' },\n  { propName: 'onGotPointerCapture', category: 'pointer' },\n  { propName: 'onLostPointerCapture', category: 'pointer' },\n  { propName: 'onPointerCancel', category: 'pointer' },\n  // mouse events\n  { propName: 'onMouseEnter', category: 'mouse' },\n  { propName: 'onMouseLeave', category: 'mouse' },\n  { propName: 'onMouseOver', category: 'mouse' },\n  { propName: 'onMouseOut', category: 'mouse' },\n  { propName: 'onMouseDown', category: 'mouse' },\n  { propName: 'onMouseUp', category: 'mouse' },\n  { propName: 'onMouseMove', category: 'mouse' },\n  // touch events\n  { propName: 'onTouchStart', category: 'touch' },\n  { propName: 'onTouchMove', category: 'touch' },\n  { propName: 'onTouchEnd', category: 'touch' },\n  { propName: 'onTouchCancel', category: 'touch' },\n  // key events\n  { propName: 'onKeyDown', category: 'key' },\n  { propName: 'onKeyUp', category: 'key' },\n  // focus events\n  { propName: 'onFocus', category: 'focus' },\n  { propName: 'onBlur', category: 'focus' },\n  // drag events\n  { propName: 'onDragStart', category: 'drag' },\n  { propName: 'onDrag', category: 'drag' },\n  { propName: 'onDragEnd', category: 'drag' },\n  // wheel and scroll events not fully supported by eventFrom\n  // // wheel event\n  // { propName: 'onWheel', category: 'wheel' },\n  // // scroll event\n  // { propName: 'onScroll', category: 'scroll' },\n  // select event\n  { propName: 'onSelect', category: 'select' },\n  // context menu\n  { propName: 'onContextMenu', category: 'contextMenu' },\n];\n\ninterface FindIndexOfRecentEventOfSameType {\n  (arg: {\n    eventLog: EventLogItem[];\n    type: string;\n    eventFrom: EventFromInput;\n    nowTime: number;\n    recentTimeCutoff: number;\n  }): number | undefined;\n}\n\nconst findIndexOfRecentEventOfSameType: FindIndexOfRecentEventOfSameType = ({\n  eventLog,\n  type,\n  eventFrom,\n  nowTime,\n  recentTimeCutoff,\n}) => {\n  for (\n    let i = eventLog.length - 1;\n    i >= Math.max(eventLog.length - 2, 0);\n    i--\n  ) {\n    const e = eventLog[i];\n    const eventTime = e.lastEventTime || e.time;\n\n    if (\n      e.type === type &&\n      e.eventFrom === eventFrom &&\n      eventTime &&\n      nowTime - eventTime <= recentTimeCutoff\n    )\n      return i;\n  }\n};\n\ninterface CalculateTimeSincePreviousEvent {\n  (arg: { eventLog: EventLogItem[]; nowTime: number; eventType?: string }):\n    | number\n    | undefined;\n}\n\nconst calculateTimeSincePreviousEvent: CalculateTimeSincePreviousEvent = ({\n  eventLog,\n  nowTime,\n  eventType,\n}) => {\n  for (let i = eventLog.length - 1; i >= 0; i--) {\n    if (eventType && eventType !== eventLog[i].type) {\n      continue;\n    }\n    const eventTime = eventLog[i].lastEventTime || eventLog[i].time;\n    if (eventTime !== undefined) {\n      return nowTime - eventTime;\n    }\n  }\n  return undefined;\n};\n\nexport interface EventLogItem {\n  category: EventCategory;\n  type: string;\n  eventFrom: EventFromInput;\n  time?: number;\n  lastEventTime?: number; // used when counting multiple events of the same time, e.g. mousemove\n  timeSincePreviousEvent?: number;\n  timeSincePreviousPointerdown?: number;\n  xCoordinate?: number;\n  yCoordinate?: number;\n  target?: any;\n  count?: number;\n}\n\ninterface EventListener {\n  [key: string]: React.EventHandler<any>;\n}\n\ntype UseEventLog = () => {\n  eventLog: EventLogItem[];\n  eventListeners: EventListener;\n};\n\nexport const useEventLog: UseEventLog = () => {\n  const {\n    setMoveListeners,\n    preventDefaultOnAll,\n    contextMenuPreventDefault,\n    consoleLogEvents,\n  } = useContext(OptionsContext);\n\n  const [eventLog, updateEventLog] = useState<EventLogItem[]>([]);\n\n  const eventListeners = useMemo(\n    () =>\n      listOfEventListenerTypes.reduce(\n        (eventListenersReduceObj: EventListener, listenerType) => {\n          if (\n            !setMoveListeners &&\n            /move/.test(listenerType.propName.toLowerCase())\n          ) {\n            return eventListenersReduceObj;\n          }\n\n          eventListenersReduceObj[listenerType.propName] = (event) => {\n            const eventFromResult = eventFrom(event);\n            const nowTime = Date.now();\n\n            if (\n              preventDefaultOnAll ||\n              (contextMenuPreventDefault && event.type === 'contextmenu')\n            ) {\n              event.preventDefault();\n            }\n\n            if (consoleLogEvents) {\n              console.log(event, `eventFrom: ${eventFromResult}`);\n            }\n\n            updateEventLog((prevState) => {\n              const newState = [...prevState];\n              const recentEventOfSameTypeIdx = findIndexOfRecentEventOfSameType(\n                {\n                  eventLog: newState,\n                  type: event.type,\n                  eventFrom: eventFromResult,\n                  nowTime,\n                  recentTimeCutoff: 1000,\n                },\n              );\n\n              if (\n                [\n                  'click',\n                  'mousemove',\n                  'pointermove',\n                  'touchmove',\n                  'keydown',\n                  'keyup',\n                  'drag',\n                  'scroll',\n                  'wheel',\n                ].includes(event.type) &&\n                recentEventOfSameTypeIdx !== undefined\n              ) {\n                const recentEvent = newState[recentEventOfSameTypeIdx];\n                const newCount = recentEvent.count ? recentEvent.count + 1 : 2;\n                newState[recentEventOfSameTypeIdx] = {\n                  category: listenerType.category,\n                  type: event.type,\n                  eventFrom: eventFromResult,\n                  time: recentEvent.time,\n                  lastEventTime: nowTime,\n                  timeSincePreviousEvent: recentEvent.timeSincePreviousEvent,\n                  timeSincePreviousPointerdown:\n                    recentEvent.timeSincePreviousPointerdown,\n                  xCoordinate: Math.round(event.clientX),\n                  yCoordinate: Math.round(event.clientY),\n                  target: event.target,\n                  count: newCount,\n                };\n              } else {\n                newState.push({\n                  category: listenerType.category,\n                  type: event.type,\n                  eventFrom: eventFromResult,\n                  time: nowTime,\n                  timeSincePreviousEvent: calculateTimeSincePreviousEvent({\n                    eventLog: newState,\n                    nowTime,\n                  }),\n                  timeSincePreviousPointerdown: calculateTimeSincePreviousEvent(\n                    {\n                      eventLog: newState,\n                      eventType: 'pointerdown',\n                      nowTime,\n                    },\n                  ),\n                  xCoordinate: Math.round(event.clientX),\n                  yCoordinate: Math.round(event.clientY),\n                  target: event.target,\n                });\n              }\n\n              return newState;\n            });\n          };\n          return eventListenersReduceObj;\n        },\n        {},\n      ),\n    [\n      setMoveListeners,\n      preventDefaultOnAll,\n      contextMenuPreventDefault,\n      consoleLogEvents,\n    ],\n  );\n\n  return { eventLog, eventListeners };\n};\n","import { useEffect, useRef, useContext } from 'react';\nimport { OptionsContext } from '../App';\nimport { EventLogItem, EventCategory } from './useEventLog';\nimport { styled } from '../stitches.config';\n\nconst EventLogContainer = styled('div', {\n  height: '300px',\n  padding: '0 5px',\n  border: '1px solid $colors$highContrast',\n  overflowY: 'scroll',\n});\n\nconst EventLogLine = styled('code', {\n  display: 'block',\n  variants: {\n    spaceAbove: {\n      true: {\n        marginTop: '20px',\n      },\n    },\n  },\n});\n\nconst InfoType = styled('span', {\n  variants: {\n    type: {\n      click: { color: '$blue' },\n      pointer: { color: '$purple' },\n      mouse: { color: '$green' },\n      touch: { color: '$orange' },\n      key: { color: '$yellow' },\n      focus: { color: '$blueGreen' },\n      cancel: { color: '$red' },\n      lowContrast: { color: '$lowContrast' },\n    },\n  },\n});\n\nconst determineInfoType = (category: EventCategory, type: string) => {\n  if (type === 'pointercancel' || type === 'touchcancel') return 'cancel';\n  switch (category) {\n    case 'click':\n      return category;\n    case 'pointer':\n      return category;\n    case 'mouse':\n      return category;\n    case 'touch':\n      return category;\n    case 'key':\n      return category;\n    case 'focus':\n      return category;\n    default:\n      return undefined;\n  }\n};\n\ninterface EventLogUIProps {\n  eventLog: EventLogItem[];\n  height?: string;\n}\n\nexport const EventLogUI: React.VFC<EventLogUIProps> = ({\n  eventLog,\n  height,\n}) => {\n  const {\n    showTimeSincePreviousEvent,\n    showTimeSincePreviousPointerdown,\n    showEventCoordinates,\n    showPointerEvents,\n    showMouseEvents,\n    showTouchEvents,\n  } = useContext(OptionsContext);\n\n  const eventLogEl = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (eventLogEl && eventLogEl.current) {\n      eventLogEl.current.scrollTop = eventLogEl.current.scrollHeight;\n    }\n  });\n\n  const eventsToExclude: string[] = [];\n  if (!showPointerEvents) eventsToExclude.push('pointer');\n  if (!showMouseEvents) eventsToExclude.push('mouse');\n  if (!showTouchEvents) eventsToExclude.push('touch');\n\n  return (\n    <EventLogContainer ref={eventLogEl} css={{ height }}>\n      {eventLog.map(\n        (\n          {\n            category,\n            type,\n            count,\n            eventFrom,\n            time,\n            timeSincePreviousEvent,\n            timeSincePreviousPointerdown,\n            xCoordinate,\n            yCoordinate,\n          },\n          idx,\n        ) =>\n          eventsToExclude.includes(category) ? null : (\n            <EventLogLine\n              key={`${idx}${type}${count}`}\n              spaceAbove={\n                timeSincePreviousEvent !== undefined &&\n                timeSincePreviousEvent > 1000\n              }\n            >\n              <InfoType type=\"lowContrast\">{idx}</InfoType>{' '}\n              <InfoType type={determineInfoType(category, type)}>\n                {type}\n                {count ? ` (${count})` : ''}\n              </InfoType>{' '}\n              eventFrom <InfoType type={eventFrom}>{eventFrom}</InfoType>\n              {showTimeSincePreviousEvent &&\n                timeSincePreviousEvent !== undefined && (\n                  <span>, {timeSincePreviousEvent}ms</span>\n                )}\n              {showTimeSincePreviousPointerdown &&\n                timeSincePreviousPointerdown !== undefined && (\n                  <span>, {timeSincePreviousPointerdown}ms_pointerdown</span>\n                )}\n              {showEventCoordinates && (\n                <span>\n                  , x:{xCoordinate}, y:{yCoordinate}\n                </span>\n              )}\n            </EventLogLine>\n          ),\n      )}\n    </EventLogContainer>\n  );\n};\n","import { useMemo, useContext } from 'react';\nimport { Interactive } from 'react-interactive';\nimport { styled, CSS } from '../stitches.config';\nimport { useEventLog } from './useEventLog';\nimport { EventLogUI } from './EventLog';\nimport { OptionsContext } from '../App';\n\nconst DemoContainer = styled('div', {\n  paddingBottom: '30px',\n  margin: '26px 0',\n  borderBottom: '1px dotted $colors$lowContrast',\n});\n\nconst DemoButtonSharedStyle: CSS = {\n  display: 'block',\n  width: '100%',\n  height: '70px',\n  margin: '10px 0',\n  fontSize: '24px',\n  textAlign: 'center',\n  color: '$highContrast',\n  border: '1px solid $colors$highContrast',\n};\n\nconst DemoButtonInteractive = styled(Interactive.Button, {\n  ...DemoButtonSharedStyle,\n  '&.hover, &.active': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$purple',\n    outlineOffset: '2px',\n  },\n});\n\nconst DemoButtonRegular = styled('button', {\n  ...DemoButtonSharedStyle,\n  '&:hover, &:active': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&:focus-visible': {\n    outline: '2px solid $colors$purple',\n    outlineOffset: '2px',\n  },\n});\n\nconst DemoLinkContainer = styled('div', {\n  margin: '10px 0',\n});\n\nconst DemoLinkSharedStyle: CSS = {\n  fontSize: '24px',\n  textDecorationLine: 'underline',\n  textDecorationThickness: 'from-font',\n  padding: '0 1px',\n  margin: '0 -1px',\n};\n\nconst DemoLinkInteractive = styled(Interactive.A, {\n  ...DemoLinkSharedStyle,\n  '&.hover, &.active': {\n    color: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$purple',\n    outlineOffset: '2px',\n  },\n});\n\nconst DemoLinkRegular = styled('a', {\n  ...DemoLinkSharedStyle,\n  '&:hover, &:active': {\n    color: '$green',\n  },\n  '&:focus-visible': {\n    outline: '2px solid $colors$purple',\n    outlineOffset: '2px',\n  },\n});\n\nconst ScrollableContainer = styled('div', {\n  margin: '10px 0',\n  height: '100px',\n  padding: '0 5px',\n  border: '1px solid $colors$highContrast',\n  overflow: 'scroll',\n});\n\nconst ScrollableItem = styled('div', {\n  pointerEvents: 'none',\n});\n\nconst FormHeader = styled('h3', {\n  fontSize: '14px',\n  margin: '12px 0 2px',\n  color: '$lowContrast',\n});\n\nconst DemoTextInputSharedStyle: CSS = {\n  width: '100%',\n  fontSize: '24px',\n  border: '1px solid $colors$highContrast',\n  padding: '2px 5px',\n};\n\nconst DemoTextInputInteractive = styled(Interactive.Input, {\n  ...DemoTextInputSharedStyle,\n  '&.hover, &.active': {\n    borderColor: '$green',\n  },\n  '&.focus': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '-1px',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$purple',\n  },\n});\n\nconst DemoTextInputRegular = styled('input', {\n  ...DemoTextInputSharedStyle,\n  '&:hover, &:active': {\n    borderColor: '$green',\n  },\n  '&:focus': {\n    outline: '2px solid $colors$green',\n    outlineOffset: '-1px',\n  },\n});\n\nconst DemoSubmitButtonSharedStyle: CSS = {\n  display: 'block',\n  width: '100%',\n  height: '44px',\n  margin: '10px 0',\n  fontSize: '24px',\n  textAlign: 'center',\n  color: '$highContrast',\n  border: '1px solid $colors$highContrast',\n};\n\nconst DemoSubmitButtonInteractive = styled(Interactive.Button, {\n  ...DemoSubmitButtonSharedStyle,\n  '&.hover, &.active': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&.focusFromKey': {\n    outline: '2px solid $colors$purple',\n    outlineOffset: '2px',\n  },\n});\n\nconst DemoSubmitButtonRegular = styled('button', {\n  ...DemoSubmitButtonSharedStyle,\n  '&:hover, &:active': {\n    color: '$green',\n    borderColor: '$green',\n  },\n  '&:focus-visible': {\n    outline: '2px solid $colors$purple',\n    outlineOffset: '2px',\n  },\n});\n\nexport const ButtonDemo: React.VFC = () => {\n  const {\n    useReactInteractive,\n    riUseExtendedTouchActive,\n    touchActionNone,\n    webkitTapHighlightColorTransparent,\n    webkitTouchCalloutNone,\n  } = useContext(OptionsContext);\n  const { eventLog, eventListeners } = useEventLog();\n\n  const css: CSS = {\n    touchAction: touchActionNone ? 'none' : undefined,\n    WebkitTapHighlightColor: webkitTapHighlightColorTransparent\n      ? 'transparent'\n      : undefined,\n    WebkitTouchCallout: webkitTouchCalloutNone ? 'none' : undefined,\n  };\n\n  return (\n    <DemoContainer id=\"button-demo\">\n      {useReactInteractive ? (\n        <DemoButtonInteractive\n          {...eventListeners}\n          useExtendedTouchActive={riUseExtendedTouchActive}\n          css={css}\n        >\n          Test Button\n        </DemoButtonInteractive>\n      ) : (\n        <DemoButtonRegular {...eventListeners} css={css}>\n          Test Button\n        </DemoButtonRegular>\n      )}\n      <EventLogUI eventLog={eventLog} />\n    </DemoContainer>\n  );\n};\n\nexport const LinkDemo: React.VFC = () => {\n  const {\n    useReactInteractive,\n    riUseExtendedTouchActive,\n    touchActionNone,\n    webkitTapHighlightColorTransparent,\n    webkitTouchCalloutNone,\n    draggableFalse,\n  } = useContext(OptionsContext);\n  const { eventLog, eventListeners } = useEventLog();\n\n  const css: CSS = {\n    touchAction: touchActionNone ? 'none' : undefined,\n    WebkitTapHighlightColor: webkitTapHighlightColorTransparent\n      ? 'transparent'\n      : undefined,\n    WebkitTouchCallout: webkitTouchCalloutNone ? 'none' : undefined,\n  };\n\n  return (\n    <DemoContainer id=\"link-demo\">\n      <DemoLinkContainer>\n        {useReactInteractive ? (\n          <DemoLinkInteractive\n            {...eventListeners}\n            useExtendedTouchActive={riUseExtendedTouchActive}\n            href=\"#link-demo\"\n            draggable={draggableFalse ? false : undefined}\n            css={css}\n          >\n            Test link with href=\"#link-demo\"\n          </DemoLinkInteractive>\n        ) : (\n          <DemoLinkRegular\n            {...eventListeners}\n            href=\"#link-demo\"\n            draggable={draggableFalse ? false : undefined}\n            css={css}\n          >\n            Test link with href=\"#link-demo\"\n          </DemoLinkRegular>\n        )}\n      </DemoLinkContainer>\n      <EventLogUI eventLog={eventLog} />\n    </DemoContainer>\n  );\n};\n\nexport const ScrollableDemo: React.VFC = () => {\n  const {\n    touchActionNone,\n    webkitTapHighlightColorTransparent,\n    webkitTouchCalloutNone,\n  } = useContext(OptionsContext);\n  const { eventLog, eventListeners } = useEventLog();\n  return (\n    <DemoContainer id=\"scrollable-demo\">\n      <ScrollableContainer\n        {...eventListeners}\n        css={{\n          touchAction: touchActionNone ? 'none' : undefined,\n          WebkitTapHighlightColor: webkitTapHighlightColorTransparent\n            ? 'transparent'\n            : undefined,\n          WebkitTouchCallout: webkitTouchCalloutNone ? 'none' : undefined,\n        }}\n      >\n        {useMemo(\n          () =>\n            Array(100)\n              .fill(1)\n              .map((_, idx) => (\n                <ScrollableItem key={idx}>{idx} scroll me</ScrollableItem>\n              )),\n          [],\n        )}\n      </ScrollableContainer>\n      <EventLogUI eventLog={eventLog} />\n    </DemoContainer>\n  );\n};\n\nexport const FormDemo: React.VFC = () => {\n  const {\n    useReactInteractive,\n    riUseExtendedTouchActive,\n    touchActionNone,\n    webkitTapHighlightColorTransparent,\n    webkitTouchCalloutNone,\n  } = useContext(OptionsContext);\n  const textInput = useEventLog();\n  const submitButton = useEventLog();\n\n  const css: CSS = {\n    touchAction: touchActionNone ? 'none' : undefined,\n    WebkitTapHighlightColor: webkitTapHighlightColorTransparent\n      ? 'transparent'\n      : undefined,\n    WebkitTouchCallout: webkitTouchCalloutNone ? 'none' : undefined,\n  };\n\n  return (\n    <DemoContainer id=\"form-demo\">\n      <form onSubmit={(e) => e.preventDefault()}>\n        {useReactInteractive ? (\n          <DemoTextInputInteractive\n            {...textInput.eventListeners}\n            useExtendedTouchActive={riUseExtendedTouchActive}\n            type=\"text\"\n            placeholder=\"Form demo\"\n            css={css}\n          />\n        ) : (\n          <DemoTextInputRegular\n            {...textInput.eventListeners}\n            type=\"text\"\n            placeholder=\"Form demo\"\n            css={css}\n          />\n        )}\n        {useReactInteractive ? (\n          <DemoSubmitButtonInteractive\n            {...submitButton.eventListeners}\n            useExtendedTouchActive={riUseExtendedTouchActive}\n            type=\"submit\"\n            css={css}\n          >\n            Submit\n          </DemoSubmitButtonInteractive>\n        ) : (\n          <DemoSubmitButtonRegular\n            {...submitButton.eventListeners}\n            type=\"submit\"\n            css={css}\n          >\n            Submit\n          </DemoSubmitButtonRegular>\n        )}\n      </form>\n      <FormHeader>Text input event log</FormHeader>\n      <EventLogUI eventLog={textInput.eventLog} height=\"150px\" />\n      <FormHeader>Submit input event log</FormHeader>\n      <EventLogUI eventLog={submitButton.eventLog} height=\"150px\" />\n    </DemoContainer>\n  );\n};\n","import { useState, useEffect, useMemo, createContext } from 'react';\nimport { InteractiveStateChange } from 'react-interactive';\nimport { styled, globalCss } from './stitches.config';\nimport { DarkModeButton } from './ui/DarkModeButton';\nimport { GitHubIconLink } from './ui/GitHubIconLink';\nimport { Link } from './ui/Link';\nimport { Button } from './ui/Button';\nimport { OptionCheckboxAndLabel } from './ui/OptionCheckboxAndLabel';\nimport {\n  ButtonDemo,\n  LinkDemo,\n  // ScrollableDemo,\n  FormDemo,\n} from './components/Demos';\n\nconst AppContainer = styled('div', {\n  maxWidth: '700px',\n  padding: '12px 15px 25px',\n  margin: '0 auto',\n});\n\nconst HeaderContainer = styled('header', {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '18px',\n});\n\nconst H1 = styled('h1', {\n  fontSize: '26px',\n  marginRight: '16px',\n});\n\nconst HeaderIconContainer = styled('span', {\n  width: '78px',\n  display: 'inline-flex',\n  justifyContent: 'space-between',\n  gap: '12px',\n});\n\nconst InfoContainer = styled('p', {\n  paddingBottom: '12px',\n  borderBottom: '1px dotted $colors$lowContrast',\n});\n\nconst DemoOptionsContainer = styled('div', {\n  padding: '10px 0 14px',\n  borderBottom: '1px dotted $colors$lowContrast',\n});\n\nconst DemoOptionsButton = styled(Button, {\n  display: 'block',\n  fontSize: '20px',\n  padding: '0 1px',\n  margin: '0 -1px',\n});\n\nconst OptionsContainer = styled('div', {\n  marginTop: '12px',\n});\n\nconst OptionSectionHeading = styled('div', {\n  margin: '14px 0 6px',\n  fontWeight: '600',\n});\n\ninterface DemoOptionsInterface {\n  useReactInteractive: boolean;\n  setMoveListeners: boolean;\n  preventDefaultOnAll: boolean;\n  touchActionNone: boolean;\n  webkitTapHighlightColorTransparent: boolean;\n  riUseExtendedTouchActive: boolean;\n  userSelectNone: boolean;\n  webkitTouchCalloutNone: boolean;\n  contextMenuPreventDefault: boolean;\n  draggableFalse: boolean;\n  showTimeSincePreviousEvent: boolean;\n  showEventCoordinates: boolean;\n  showPointerEvents: boolean;\n  showMouseEvents: boolean;\n  showTouchEvents: boolean;\n  showTimeSincePreviousPointerdown: boolean;\n  consoleLogEvents: boolean;\n}\n\nexport const OptionsContext = createContext<DemoOptionsInterface>({\n  useReactInteractive: false,\n  setMoveListeners: false,\n  preventDefaultOnAll: false,\n  touchActionNone: false,\n  webkitTapHighlightColorTransparent: false,\n  riUseExtendedTouchActive: false,\n  userSelectNone: false,\n  webkitTouchCalloutNone: false,\n  contextMenuPreventDefault: false,\n  draggableFalse: false,\n  showTimeSincePreviousEvent: false,\n  showEventCoordinates: false,\n  showPointerEvents: false,\n  showMouseEvents: false,\n  showTouchEvents: false,\n  showTimeSincePreviousPointerdown: false,\n  consoleLogEvents: false,\n});\n\nexport const App = () => {\n  globalCss();\n\n  const [showDemoOptions, updateShowDemoOptions] = useState(false);\n\n  // options\n  const [useReactInteractive, updateUseReactInteractive] = useState(true);\n  const [setMoveListeners, updateSetMoveListeners] = useState(true);\n  const [preventDefaultOnAll, updatePreventDefaultOnAll] = useState(false);\n  const [touchActionNone, updateTouchActionNone] = useState(false);\n  const [\n    webkitTapHighlightColorTransparent,\n    updateWebkitTapHighlightColorTransparent,\n  ] = useState(true);\n\n  // options to enable long press on touch devices\n  const [\n    riUseExtendedTouchActive,\n    updateInteractiveUseExtendedTouchActive,\n  ] = useState(false);\n  const [userSelectNone, updateUserSelectNone] = useState(false);\n  const [contextMenuPreventDefault, updateContextMenuPreventDefault] = useState(\n    false,\n  );\n  const [webkitTouchCalloutNone, updateWebkitTouchCalloutNone] = useState(\n    false,\n  );\n  const [draggableFalse, updateDraggableFalse] = useState(false);\n\n  // when using react-interactive ensure the the following are set to false\n  if (useReactInteractive) {\n    userSelectNone && updateUserSelectNone(false);\n  }\n\n  // event log options\n  const [\n    showTimeSincePreviousEvent,\n    updateShowTimeSincePreviousEvent,\n  ] = useState(false);\n  const [\n    showTimeSincePreviousPointerdown,\n    updateShowTimeSincePreviousPointerdown,\n  ] = useState(false);\n  const [showEventCoordinates, updateShowEventCoordinates] = useState(false);\n  const [showPointerEvents, updateShowPointerEvents] = useState(true);\n  const [showMouseEvents, updateShowMouseEvents] = useState(true);\n  const [showTouchEvents, updateShowTouchEvents] = useState(true);\n  const [consoleLogEvents, updateConsoleLogEvents] = useState(false);\n\n  const demoOptions: DemoOptionsInterface = useMemo(\n    () => ({\n      useReactInteractive,\n      setMoveListeners,\n      preventDefaultOnAll,\n      touchActionNone,\n      webkitTapHighlightColorTransparent,\n      riUseExtendedTouchActive,\n      userSelectNone,\n      webkitTouchCalloutNone,\n      contextMenuPreventDefault,\n      draggableFalse,\n      showTimeSincePreviousEvent,\n      showEventCoordinates,\n      showPointerEvents,\n      showMouseEvents,\n      showTouchEvents,\n      showTimeSincePreviousPointerdown,\n      consoleLogEvents,\n    }),\n    [\n      useReactInteractive,\n      setMoveListeners,\n      preventDefaultOnAll,\n      touchActionNone,\n      webkitTapHighlightColorTransparent,\n      riUseExtendedTouchActive,\n      userSelectNone,\n      webkitTouchCalloutNone,\n      contextMenuPreventDefault,\n      draggableFalse,\n      showTimeSincePreviousEvent,\n      showEventCoordinates,\n      showPointerEvents,\n      showMouseEvents,\n      showTouchEvents,\n      showTimeSincePreviousPointerdown,\n      consoleLogEvents,\n    ],\n  );\n\n  // set user-select: none on the body when userSelectNone is enabled\n  useEffect(() => {\n    document.body.style.userSelect = userSelectNone ? 'none' : '';\n    document.body.style.webkitUserSelect = userSelectNone ? 'none' : '';\n  }, [userSelectNone]);\n\n  return (\n    <AppContainer>\n      <HeaderContainer>\n        <H1>Event From Demo</H1>\n        <HeaderIconContainer>\n          <DarkModeButton />\n          <GitHubIconLink\n            href=\"https://github.com/rafgraph/event-from\"\n            title=\"GitHub repository for Event From\"\n          />\n        </HeaderIconContainer>\n      </HeaderContainer>\n      <InfoContainer>\n        Some elements with event listeners and logs to demonstrate{' '}\n        <code>eventFrom</code>.\n      </InfoContainer>\n      <DemoOptionsContainer>\n        <DemoOptionsButton\n          onClick={() => updateShowDemoOptions(!showDemoOptions)}\n        >\n          Demo options - {`${showDemoOptions ? 'hide' : 'show'}`}\n        </DemoOptionsButton>\n        {showDemoOptions && (\n          <OptionsContainer>\n            <OptionCheckboxAndLabel\n              label={({ setDisableCheckbox }) => (\n                <>\n                  Use{' '}\n                  <Link\n                    href=\"https://github.com/rafgraph/react-interactive\"\n                    onStateChange={({\n                      state,\n                      prevState,\n                    }: InteractiveStateChange) => {\n                      if (state.hover || state.active) {\n                        setDisableCheckbox(true);\n                      } else {\n                        prevState.active === 'touchActive'\n                          ? // fix for radix label bug https://github.com/radix-ui/primitives/issues/609\n                            // since can't stop propagation of click event to radix label\n                            // and touchActive is exited before click event is dispatched by the browser\n                            // so have to delay enabling checkbox until after the browser (potentially) dispatches click event\n                            window.setTimeout(\n                              () => setDisableCheckbox(false),\n                              500,\n                            )\n                          : setDisableCheckbox(false);\n                      }\n                    }}\n                  >\n                    React Interactive\n                  </Link>{' '}\n                  for interactive elements in demo (button, link, input, etc)\n                </>\n              )}\n              checked={useReactInteractive}\n              setChecked={updateUseReactInteractive}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  Set <code>move</code> event listeners in demo\n                </>\n              }\n              checked={setMoveListeners}\n              setChecked={updateSetMoveListeners}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  Call <code>preventDefault()</code> on all events in demo\n                </>\n              }\n              checked={preventDefaultOnAll}\n              setChecked={updatePreventDefaultOnAll}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  <code>touch-action: none</code>, set on the element, prevents\n                  the browser from using the touch interaction, e.g. scrolling\n                  when touch starts on the button, and also prevents{' '}\n                  <code>pointercancel</code> event during a touch interaction.\n                </>\n              }\n              checked={touchActionNone}\n              setChecked={updateTouchActionNone}\n            />\n            <OptionCheckboxAndLabel\n              label={<code>-webkit-tap-highlight-color: transparent</code>}\n              checked={webkitTapHighlightColorTransparent}\n              setChecked={updateWebkitTapHighlightColorTransparent}\n            />\n            <OptionSectionHeading>\n              Options to enable long press on touch devices:\n            </OptionSectionHeading>\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  React Interactive's <code>useExtendedTouchActive</code>.\n                </>\n              }\n              checked={riUseExtendedTouchActive}\n              setChecked={updateInteractiveUseExtendedTouchActive}\n              disabled={!useReactInteractive}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  <code>user-select: none</code>, set on the{' '}\n                  <code>{'<body>'}</code>, iOS on long press attempts to select\n                  nearby text even if the target element has set{' '}\n                  <code>user-select: none</code>, so need to set it on the body\n                  and not the element.\n                  {useReactInteractive && (\n                    <>\n                      {' '}\n                      This option is disabled when using React Interactive as it\n                      is implemented by <code>useExtendedTouchActive</code>.\n                    </>\n                  )}\n                </>\n              }\n              checked={userSelectNone}\n              setChecked={updateUserSelectNone}\n              disabled={useReactInteractive}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  <code>contextmenu</code> event <code>preventDefault()</code>,\n                  to prevent the context menu from appearing on long press of\n                  links.\n                </>\n              }\n              checked={contextMenuPreventDefault}\n              setChecked={updateContextMenuPreventDefault}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  <code>-webkit-touch-callout: none</code>, to prevent the iOS\n                  \"context menu\" from appearing on long press of links because\n                  iOS doesn't support <code>contextmenu</code> events.\n                </>\n              }\n              checked={webkitTouchCalloutNone}\n              setChecked={updateWebkitTouchCalloutNone}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  <code>draggable=\"false\"</code>, to prevent from dragging links\n                  on long press on iPadOS.\n                </>\n              }\n              checked={draggableFalse}\n              setChecked={updateDraggableFalse}\n            />\n            <OptionSectionHeading>Event log options:</OptionSectionHeading>\n            <OptionCheckboxAndLabel\n              label={'Show time (ms) since previous event'}\n              checked={showTimeSincePreviousEvent}\n              setChecked={updateShowTimeSincePreviousEvent}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  Show time (ms) since previous <code>pointerdown</code> event\n                </>\n              }\n              checked={showTimeSincePreviousPointerdown}\n              setChecked={updateShowTimeSincePreviousPointerdown}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  Show event coordinates: <code>clientX</code>,{' '}\n                  <code>clientY</code>\n                </>\n              }\n              checked={showEventCoordinates}\n              setChecked={updateShowEventCoordinates}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  Show <code>pointer</code> events\n                </>\n              }\n              checked={showPointerEvents}\n              setChecked={updateShowPointerEvents}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  Show <code>mouse</code> events\n                </>\n              }\n              checked={showMouseEvents}\n              setChecked={updateShowMouseEvents}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  Show <code>touch</code> events\n                </>\n              }\n              checked={showTouchEvents}\n              setChecked={updateShowTouchEvents}\n            />\n            <OptionCheckboxAndLabel\n              label={\n                <>\n                  <code>console.log</code> all events\n                </>\n              }\n              checked={consoleLogEvents}\n              setChecked={updateConsoleLogEvents}\n            />\n          </OptionsContainer>\n        )}\n      </DemoOptionsContainer>\n      <OptionsContext.Provider value={demoOptions}>\n        <ButtonDemo />\n        <LinkDemo />\n        {/* scroll events not fully supported by eventFrom */}\n        {/* <ScrollableDemo /> */}\n        <FormDemo />\n      </OptionsContext.Provider>\n    </AppContainer>\n  );\n};\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}